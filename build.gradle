plugins {
    id "java"
    id "application"
    id "jacoco"
    id "com.github.johnrengelman.shadow"  version "4.0.3"
    id "com.adarshr.test-logger" version "1.6.0"
    id "com.sourcemuse.mongo" version "1.0.7"
    id "ch.netzwerg.release" version "1.2.5"
    id "com.github.kt3k.coveralls" version "2.8.2"
}

ext {
    vertxVersion = "3.6.3"
    mainVerticleName = "ar.ppedemon.wta.MainVerticle"
    watchForChange = "src/**/*.java"
    doOnChange = "$projectDir/gradlew classes"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

application {
    mainClassName = "io.vertx.core.Launcher"
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    doFirst {
        jvmArgs "-Dmongo.port=$project.mongo.port"
    }

    description = "Runs integration tests."
    group = "verification"
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath

    useJUnitPlatform()
    runWithMongoDb = true
    shouldRunAfter test

    jacoco {
        append = true
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

check.dependsOn integrationTest

mongo {
    port "random"
    logging "none"
}

repositories {
    mavenCentral()
}

dependencies {
    // Vert.x
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
    implementation "io.vertx:vertx-mongo-client:$vertxVersion"
    implementation "io.vertx:vertx-rx-java2:$vertxVersion"
    implementation "io.vertx:vertx-web-api-contract:$vertxVersion"
    implementation "com.englishtown.vertx:vertx-guice:2.3.1"

    // Logging
    implementation "org.slf4j:slf4j-api:1.7.26"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "ch.qos.logback:logback-core:1.2.3"

    // Testing
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.1.0"
    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testImplementation "io.rest-assured:rest-assured:3.3.0"
    testImplementation "io.rest-assured:json-schema-validator:3.3.0"
    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation "org.mockito:mockito-junit-jupiter:2.+"
}

run {
    args = [
            "run",
            mainVerticleName,
            "-conf config/local.json",
            "--redeploy=$watchForChange",
            "--launcher-class=${application.mainClassName}",
            "--on-redeploy=$doOnChange"
    ]
}

shadowJar {
    classifier = "all"
    manifest {
        attributes["Main-Verticle"] = mainVerticleName
    }
    mergeServiceFiles {
        include "META-INF/services/io.vertx.core.spi.VerticleFactory"
    }
}

test {
    useJUnitPlatform()
}

testlogger {
    theme "mocha"
    showStandardStreams true
    showPassedStandardStreams false
    showSkippedStandardStreams false
    showFailedStandardStreams true
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

wrapper {
    gradleVersion = "4.10.3"
}
